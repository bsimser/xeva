<?xml version="1.0"?>
<project name="XEVA Framework Build"
			default="build"
			basedir=".">

  <property name="project-name" value="XEVA Framework" overwrite="false" />
  <property name="project-config" value="Debug" />
  <property name="version-number" value="0.2.0.0" />
  <property name="build-package-dir" value="..\package\" overwrite="false" />
  <property name="build-source-dir" value="..\..\src" overwrite="false" />
  <property name="build-lib-dir" value="..\..\lib" overwrite="false" />
  <property name="build-package-dir" value="..\out\package" overwrite="false" />
  <property name="tools-dir" value="..\..\tools" />
  <property name="build-verbosity" value="Minimal" />
  
  <property name="msbuild" value="C:/WINDOWS/Microsoft.NET/Framework/v3.5/MSBuild.exe" />

  <property name="tools-dir"
       value="..\..\tools" />

  <property name="tools-nunit"
       value="${tools-dir}\nunit-2.4.6\nunit-console.exe"
       overwrite="false" />

  <property name="tools-ncover"
				 value="${tools-dir}\ncover-1.5.8\NCover.Console.exe"
				 overwrite="false" />

  <property name="tools-ncoverexplorer"
				 value="${tools-dir}\ncoverexplorer-1.4.0.1\NCoverExplorer.Console.exe"
				 overwrite="false" />

  <loadtasks>
    <fileset>
      <include name="${tools-dir}\ncoverexplorer-nant-tasks-1.4\NCoverExplorer.NAntTasks.dll" />
      <include name="${tools-dir}\nantcontrib-0.85\NAnt.Contrib.Tasks.dll" />
    </fileset>
  </loadtasks>

  <target name="build">
    <call target="clean" />
    <call target="compile" />
    <call target="package" />
    <call target="specify" />
  </target>
  
  <target name="clean">
    <delete dir="${build-package-dir}" failonerror="false" />
  </target>

  <target name="compile">

    <exec program="${msbuild}">
      <arg value="${build-source-dir}/XF.sln" />
      <arg value="/v:n" />
      <arg value="/p:Configuration=${project-config}" />
      <arg value="/p:WarningLevel=0" />
      <arg value="/p:SolutionDir=${build-source-dir}" />
    </exec>

  </target>

  <target name="package">

    <mkdir dir="${build-package-dir}" failonerror="false" />

    <copy todir="${build-package-dir}">
      <fileset>
        <include name="${build-lib-dir}/**/*.dll" />
        <include name="${build-lib-dir}/**/*.pdb" />
      </fileset>
    </copy>

    <copy file="${build-source-dir}\Framework.Specs\bin\${project-config}\XF.Specs.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Specs\bin\${project-config}\XF.Specs.pdb" todir="${build-package-dir}"/>

    <copy file="${build-source-dir}\Framework.Shared\bin\${project-config}\XF.Shared.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Shared\bin\${project-config}\XF.Shared.pdb" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Shared.Specs\bin\${project-config}\XF.Shared.Specs.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Shared.Specs\bin\${project-config}\XF.Shared.Specs.pdb" todir="${build-package-dir}"/>

    <copy file="${build-source-dir}\Framework.Model\bin\${project-config}\XF.Model.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Model\bin\${project-config}\XF.Model.pdb" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Model.Specs\bin\${project-config}\XF.Model.Specs.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Model.Specs\bin\${project-config}\XF.Model.Specs.pdb" todir="${build-package-dir}"/>

    <copy file="${build-source-dir}\Framework.Store\bin\${project-config}\XF.Store.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Store\bin\${project-config}\XF.Store.pdb" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Store.Specs\bin\${project-config}\XF.Store.Specs.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Store.Specs\bin\${project-config}\XF.Store.Specs.pdb" todir="${build-package-dir}"/>

    <copy file="${build-source-dir}\Framework.Services\bin\${project-config}\XF.Services.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Services\bin\${project-config}\XF.Services.pdb" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Services.Specs\bin\${project-config}\XF.Services.Specs.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.Services.Specs\bin\${project-config}\XF.Services.Specs.pdb" todir="${build-package-dir}"/>

    <copy file="${build-source-dir}\Framework.UI.Smart\bin\${project-config}\XF.UI.Smart.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.UI.Smart\bin\${project-config}\XF.UI.Smart.pdb" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.UI.Smart.Specs\bin\${project-config}\XF.UI.Smart.Specs.dll" todir="${build-package-dir}"/>
    <copy file="${build-source-dir}\Framework.UI.Smart.Specs\bin\${project-config}\XF.UI.Smart.Specs.pdb" todir="${build-package-dir}"/>
  
  </target>

  <target name="specify">
    <nunit2 verbose="true" haltonfailure="false" failonerror="true">
      <formatter type="Plain" />
      <test haltonfailure="false">
        <assemblies>
          <include name="${build-package-dir}/**.Specs.dll" />
        </assemblies>
      </test>
    </nunit2>
  </target>

  <target name="coverage">

    <mkdir dir="${build-package-dir}/reports"
				 failonerror="false" />

    <!--<copy file="nunit-project.config"
				tofile="${build-package-dir}\nunit-project.config"/>-->
    
    <nunitproject project="${build-package-dir}\nunit-project.nunit">
      <fileset>
        <include name="${build-package-dir}/XF.*.Specs.dll" />
      </fileset>
    </nunitproject>
    
    <ncover program="${tools-ncover}"
				  commandLineExe="${tools-nunit}"
				  commandLineArgs="${build-package-dir}\nunit-project.nunit /xml=&quot;${build-package-dir}\reports\nunit.xml&quot; /nologo /nodots"
				  coverageFile="${build-package-dir}\reports\ncover.xml"
				  failonerror="false"
				  verbose="true">
      <assemblies basedir="${build-package-dir}">
        <include name="XF*.dll" />
        <exclude name="X*.Tests.dll" />
        <exclude name="X*.Specs.dll" />
      </assemblies>
    </ncover>

    <!--
    <ncoverexplorer program="${tools-ncoverexplorer}"
              projectName="${project-name}"
              outputDir="${build-package-dir}\reports"
              reportType="5"
              xmlReportName="ncoverexplorer.xml"
              satisfactoryCoverage="20"
              failMinimum="true"
              verbose="false">
      <moduleThresholds>
        <moduleThreshold moduleName="XF.Shared.dll"
									  satisfactoryCoverage="20" />
      </moduleThresholds>
      <fileset>
        <include name="${build-package-dir}\reports\ncover.xml" />
      </fileset>
    </ncoverexplorer>-->
  
  </target>

</project>